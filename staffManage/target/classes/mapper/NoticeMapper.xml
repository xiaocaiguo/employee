<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.staff.dao.NoticeMapper">
  <resultMap id="BaseResultMap" type="com.staff.bean.Notice">
    <id column="nid" jdbcType="INTEGER" property="nid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="n_id" jdbcType="VARCHAR" property="nId" />
    <result column="time" jdbcType="DATE" property="time" />
  </resultMap>
  <resultMap id="BaseResultMapWithUser" type="com.staff.bean.Notice">
    <id column="nid" jdbcType="INTEGER" property="nid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="n_id" jdbcType="VARCHAR" property="nId" />
    <result column="time" jdbcType="DATE" property="time" />
    <association property="t_user" javaType="com.staff.bean.User">
    	<id column="id" jdbcType="VARCHAR" property="id" />
	    <result column="username" jdbcType="VARCHAR" property="username" />
	    <result column="realname" jdbcType="VARCHAR" property="realname" />
	    <result column="password" jdbcType="VARCHAR" property="password" />
	    <result column="sex" jdbcType="VARCHAR" property="sex" />
    </association>
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.staff.bean.Notice">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    nid, username, title, n_id, time
  </sql>
  <sql id="WithUser_Column_List">
    n.nid, n.username, n.title, n.n_id, n.time, u.id, u.username, u.realname, u.sex
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.staff.bean.NoticeExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.staff.bean.NoticeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithUser" parameterType="com.staff.bean.NoticeExample" resultMap="BaseResultMapWithUser">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="WithUser_Column_List" />
    from notice n left join t_user u on n.n_id = u,id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from notice
    where nid = #{nid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from notice
    where nid = #{nid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.staff.bean.NoticeExample">
    delete from notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.staff.bean.Notice">
    insert into notice (nid, username, title, 
      n_id, content)
    values (#{nid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{nId,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.staff.bean.Notice">
    insert into notice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nid != null">
        nid,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="nId != null">
        n_id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="time != null">
        time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nid != null">
        #{nid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="nId != null">
        #{nId,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.staff.bean.NoticeExample" resultType="java.lang.Long">
    select count(*) from notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update notice
    <set>
      <if test="record.nid != null">
        nid = #{record.nid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.nId != null">
        n_id = #{record.nId,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.time != null">
        content = #{record.content,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update notice
    set nid = #{record.nid,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      n_id = #{record.nId,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR},
      time = #{record.time,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update notice
    set nid = #{record.nid,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      n_id = #{record.nId,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.staff.bean.Notice">
    update notice
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="nId != null">
        n_id = #{nId,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.time != null">
        content = #{record.content,jdbcType=DATE},
      </if>
    </set>
    where nid = #{nid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.staff.bean.Notice">
    update notice
    set username = #{username,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      n_id = #{nId,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR},
      time = #{record.time,jdbcType=DATE}
    where nid = #{nid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.staff.bean.Notice">
    update notice
    set username = #{username,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      n_id = #{nId,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=DATE}
    where nid = #{nid,jdbcType=INTEGER}
  </update>
</mapper>