<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.staff.dao.EmployeeMapper">
  <resultMap id="BaseResultMap" type="com.staff.bean.Employee">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="salary" jdbcType="DOUBLE" property="salary" />
    <result column="age" jdbcType="INTEGER" property="age" />
  </resultMap>
  <resultMap id="WithDeptResultMap" type="com.staff.bean.Employee">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <id column="did" jdbcType="INTEGER" property="did" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="salary" jdbcType="DOUBLE" property="salary" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <association property="dept" javaType="com.staff.bean.Dept">
    	<id column="did" jdbcType="INTEGER" property="did" />
	    <result column="dname" jdbcType="VARCHAR" property="dname" />
	    <result column="f_id" jdbcType="VARCHAR" property="fId" />
	    <result column="manage" jdbcType="VARCHAR" property="manage" />
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, salary, age, did
  </sql>
  <sql id="WithDept_Column_List">
    e.id, e.name, e.salary, e.age, e.did, d.did, d.dname, d.f_id, d.manage 
  </sql>
  <select id="selectByExampleWithDept" parameterType="com.staff.bean.EmployeeExample" resultMap="WithDeptResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="WithDept_Column_List" />
    from t_emp e left join dept d on e.did = d.did
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.staff.bean.EmployeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_emp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKeyWithDept" parameterType="java.lang.String" resultMap="WithDeptResultMap">
    select 
    <include refid="WithDept_Column_List" />
    from t_emp e left join dept d on e.did = d.did
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_emp
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectByNameWithDept" parameterType="com.staff.bean.Employee" resultMap="WithDeptResultMap">
    select 
    <include refid="WithDept_Column_List" />
    from t_emp e left join dept d on e.did = d.did
    <where>
    <if test="id != null">
        e.id like CONCAT(CONCAT('%', #{id,jdbcType=VARCHAR}), '%')
      </if>
       <if test="name != null">
        and e.name like CONCAT(CONCAT('%', #{name,jdbcType=VARCHAR}), '%')
      </if>
      <if test="salary != null">
        and e.salary like CONCAT(CONCAT('%', #{salary,jdbcType=DOUBLE}), '%')
      </if>
      <if test="age != null">
        and e.age like CONCAT(CONCAT('%', #{age,jdbcType=INTEGER}), '%')
      </if>
      <if test="dept.dname != null">
        and d.dname like CONCAT(CONCAT('%', #{dept.dname,jdbcType=VARCHAR}), '%')
      </if>
      <if test="dept.manage != null">
        and d.message like CONCAT(CONCAT('%', #{dept.manage,jdbcType=VARCHAR}), '%')
      </if>
    </where>
  </select>
  <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_emp
    where name = #{name,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_emp
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.staff.bean.EmployeeExample">
    delete from t_emp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.staff.bean.Employee">
    insert into t_emp (id, name, salary, 
      age,did)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{salary,jdbcType=DOUBLE}, 
      #{age,jdbcType=INTEGER}, #{did,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.staff.bean.Employee">
    insert into t_emp
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="salary != null">
        salary,
      </if>
      <if test="age != null">
        age,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=DOUBLE},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.staff.bean.EmployeeExample" resultType="java.lang.Long">
    select count(*) from t_emp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_emp
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.salary != null">
        salary = #{record.salary,jdbcType=DOUBLE},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_emp
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      salary = #{record.salary,jdbcType=DOUBLE},
      age = #{record.age,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.staff.bean.Employee">
    update t_emp
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="salary != null">
        salary = #{salary,jdbcType=DOUBLE},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.staff.bean.Employee">
    update t_emp
    set name = #{name,jdbcType=VARCHAR},
      salary = #{salary,jdbcType=DOUBLE},
      age = #{age,jdbcType=INTEGER},
      did = #{did,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>